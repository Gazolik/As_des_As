trois IA : 

testPosition : sert à vérifier : pas sortir de la base : 

IA offensive : On essait de tirer le plus possible sinon on ce rapproche. 
IA deffensive: se recule sans ce faire tirer dessus. 

Amélioration des IA : l'orientation des avions à la fin des tours

IA hybride : essait de maximiser (tir + / tir -)
IA qui apprend contre qui l'IA joue : deffensive ou offensive. 

IA kamikaz

explication du code : 
plane : 
	--> updatePlanes  : execute la liste des actions etc. 
game : 
	--> chaque IA prend un paramètre un numéro qui remplira un tableau d'action dans 'actions'
	--> ensuite on appelle la fonction updatePlanes
	
ai_offensive : 
	--> aiOffensive : findAll prend tous les coups et les mets dans une liste.
						On prend un coup au hazard dans cette liste
						Modifie le tableau 'actions'
						appele playOffensive
						
	--> playOffensive : principe : on va générer un trois actions 
						On créer deux autres actions, on appele planeActions (on créer des nouveaux avions fantomes à chaque couts)
						--> betterPosition : si la distance entres les deux avions est plus petite qu'avant
						A chaque nouvelle postition générer, on met à jours une variables global qui donne le score de la position (actFire : nb de fois où on peut tirer actuellement et bestFire la variable global. De même pour la distance global). 
						On ne pernd ensuite que les prochaines solutions qui sont meilleurs que ce variable. 
						
						Test position à la fin.
						testFire : 
						
			
	--> coupleActions : générer deux actions : une faite par l'adervaire et celle que l'on va jouer. 
						En gros, ça génere toutes les actions possibles
						
ai_deffensive : de même, mais on ne veut pas tirer, on veut juste séloigner.  	